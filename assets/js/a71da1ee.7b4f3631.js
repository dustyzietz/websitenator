"use strict";(self.webpackChunkwebsitenator=self.webpackChunkwebsitenator||[]).push([[448],{384:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"templates/next-quick-start","title":"\ud83d\ude80 Hanalei App \u2013 Fullstack Setup with Mongoose, React Query, shadcn/ui, and TanStack Table","description":"\ud83e\uddf0 Tech Stack","source":"@site/docs/templates/next-quick-start.md","sourceDirName":"templates","slug":"/templates/next-quick-start","permalink":"/docs/templates/next-quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/templates/next-quick-start.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u26a1 Template 3 \u2013 Vite + React + C# FastEndpoints + PostgreSQL","permalink":"/docs/templates/csharp-postgres-quick-start"},"next":{"title":"Vite + React + Tailwind CSS v4 + Make.com + Optional Sanity Integration","permalink":"/docs/templates/vite-quick-start"}}');var a=t(4848),o=t(8453);const c={},l="\ud83d\ude80 Hanalei App \u2013 Fullstack Setup with Mongoose, React Query, shadcn/ui, and TanStack Table",r={},i=[{value:"\ud83e\uddf0 Tech Stack",id:"-tech-stack",level:2},{value:"\u2705 Step 1: Create the Project",id:"-step-1-create-the-project",level:2},{value:"\u2705 Step 2: Install Packages",id:"-step-2-install-packages",level:2},{value:"\u2705 Step 3: Tailwind CSS Setup",id:"-step-3-tailwind-css-setup",level:2},{value:"\u2705 Step 4: Create Pages",id:"-step-4-create-pages",level:2},{value:"Home Page (<code>src/app/page.tsx</code>)",id:"home-page-srcapppagetsx",level:3},{value:"Contact Page (<code>src/app/contact/page.tsx</code>)",id:"contact-page-srcappcontactpagetsx",level:3},{value:"\u2705 Step 5: MongoDB + Mongoose Setup",id:"-step-5-mongodb--mongoose-setup",level:2},{value:"<code>.env.local</code>",id:"envlocal",level:3},{value:"<code>src/models/Message.ts</code>",id:"srcmodelsmessagets",level:3},{value:"<code>src/lib/mongoose.ts</code>",id:"srclibmongoosets",level:3},{value:"\u2705 Step 6: API Route",id:"-step-6-api-route",level:2},{value:"<code>src/app/api/contact/route.ts</code>",id:"srcappapicontactroutets",level:3},{value:"\u2705 Step 7: React Query Scoped to <code>/messages</code>",id:"-step-7-react-query-scoped-to-messages",level:2},{value:"<code>src/app/messages/layout.tsx</code>",id:"srcappmessageslayouttsx",level:3},{value:"\u2705 Step 8: Set Up Data Table",id:"-step-8-set-up-data-table",level:2},{value:"Install base table UI from shadcn:",id:"install-base-table-ui-from-shadcn",level:3},{value:"Create <code>src/components/ui/data-table.tsx</code>",id:"create-srccomponentsuidata-tabletsx",level:3},{value:"Create <code>src/components/ui/columns.ts</code>",id:"create-srccomponentsuicolumnsts",level:3},{value:"\u2705 Step 9: Use the Table in Page",id:"-step-9-use-the-table-in-page",level:2},{value:"<code>src/app/messages/page.tsx</code>",id:"srcappmessagespagetsx",level:3},{value:"\u2705 Step 10: Initialize Sanity Studio (Optional)",id:"-step-10-initialize-sanity-studio-optional",level:2},{value:"8. Connect Sanity to Frontend and Configure CORS",id:"8-connect-sanity-to-frontend-and-configure-cors",level:2},{value:"9. Update Homepage to Use Sanity",id:"9-update-homepage-to-use-sanity",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"-hanalei-app--fullstack-setup-with-mongoose-react-query-shadcnui-and-tanstack-table",children:"\ud83d\ude80 Hanalei App \u2013 Fullstack Setup with Mongoose, React Query, shadcn/ui, and TanStack Table"})}),"\n",(0,a.jsx)(n.h2,{id:"-tech-stack",children:"\ud83e\uddf0 Tech Stack"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Next.js (App Router + TypeScript)"}),"\n",(0,a.jsx)(n.li,{children:"Tailwind CSS v4"}),"\n",(0,a.jsx)(n.li,{children:"React Hook Form"}),"\n",(0,a.jsx)(n.li,{children:"Mongoose + MongoDB"}),"\n",(0,a.jsx)(n.li,{children:"React Query (scoped to messages layout)"}),"\n",(0,a.jsx)(n.li,{children:"shadcn/ui components"}),"\n",(0,a.jsx)(n.li,{children:"TanStack Table logic for data grid"}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-step-1-create-the-project",children:"\u2705 Step 1: Create the Project"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'npx create-next-app@latest hanalei-next-app \\\n  --typescript \\\n  --tailwind \\\n  --app \\\n  --src-dir \\\n  --import-alias "@/*"\ncd hanalei-next-app\n'})}),"\n",(0,a.jsx)(n.h2,{id:"-step-2-install-packages",children:"\u2705 Step 2: Install Packages"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install react-hook-form mongoose @tanstack/react-query @tanstack/react-table\n"})}),"\n",(0,a.jsx)(n.h2,{id:"-step-3-tailwind-css-setup",children:"\u2705 Step 3: Tailwind CSS Setup"}),"\n",(0,a.jsxs)(n.p,{children:["Already configured by ",(0,a.jsx)(n.code,{children:"create-next-app"}),"."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-step-4-create-pages",children:"\u2705 Step 4: Create Pages"}),"\n",(0,a.jsxs)(n.h3,{id:"home-page-srcapppagetsx",children:["Home Page (",(0,a.jsx)(n.code,{children:"src/app/page.tsx"}),")"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import Link from \'next/link\';\n\nexport default function HomePage() {\n  return (\n    <div className="text-center p-10">\n      <h1 className="text-3xl font-bold">Welcome to My Site</h1>\n      <p className="mt-4">Helping you get started quickly.</p>\n      <Link href="/contact">\n        <button className="mt-6 bg-blue-500 text-white px-4 py-2 rounded">\n          Contact Us\n        </button>\n      </Link>\n    </div>\n  );\n}\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"contact-page-srcappcontactpagetsx",children:["Contact Page (",(0,a.jsx)(n.code,{children:"src/app/contact/page.tsx"}),")"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'\'use client\';\n\nimport { useForm } from \'react-hook-form\';\n\nexport default function ContactPage() {\n  const { register, handleSubmit, reset } = useForm();\n\n  const onSubmit = async (data: any) => {\n    const res = await fetch(\'/api/contact\', {\n      method: \'POST\',\n      headers: { \'Content-Type\': \'application/json\' },\n      body: JSON.stringify(data),\n    });\n\n    if (res.ok) {\n      alert("Message saved!");\n      reset();\n    } else {\n      alert("Something went wrong.");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className="max-w-md mx-auto p-6 bg-white rounded shadow mt-10">\n      <input {...register("name", { required: true })} placeholder="Name" className="w-full border p-2 mb-4" />\n      <input {...register("email", { required: true })} placeholder="Email" className="w-full border p-2 mb-4" />\n      <textarea {...register("message", { required: true })} placeholder="Message" className="w-full border p-2 mb-4" />\n      <button type="submit" className="bg-blue-500 text-white px-4 py-2 rounded">Send</button>\n    </form>\n  );\n}\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-step-5-mongodb--mongoose-setup",children:"\u2705 Step 5: MongoDB + Mongoose Setup"}),"\n",(0,a.jsx)(n.h3,{id:"envlocal",children:(0,a.jsx)(n.code,{children:".env.local"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-env",children:"MONGODB_URI=mongodb+srv://<user>:<pass>@cluster0.mongodb.net/hanalei?retryWrites=true&w=majority\n"})}),"\n",(0,a.jsx)(n.h3,{id:"srcmodelsmessagets",children:(0,a.jsx)(n.code,{children:"src/models/Message.ts"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import mongoose, { Schema, models, model } from 'mongoose';\n\nconst messageSchema = new Schema({\n  name: String,\n  email: String,\n  message: String,\n}, { timestamps: true });\n\nexport const Message = models.Message || model('Message', messageSchema);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"srclibmongoosets",children:(0,a.jsx)(n.code,{children:"src/lib/mongoose.ts"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI!;\n\nif (!MONGODB_URI) throw new Error('Missing MONGODB_URI');\n\nlet cached = (global as any).mongoose || (global as any).mongoose = { conn: null, promise: null };\n\nexport default async function dbConnect() {\n  if (cached.conn) return cached.conn;\n  if (!cached.promise) {\n    cached.promise = mongoose.connect(MONGODB_URI, { bufferCommands: false });\n  }\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-step-6-api-route",children:"\u2705 Step 6: API Route"}),"\n",(0,a.jsx)(n.h3,{id:"srcappapicontactroutets",children:(0,a.jsx)(n.code,{children:"src/app/api/contact/route.ts"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { NextResponse } from 'next/server';\nimport dbConnect from '@/lib/mongoose';\nimport { Message } from '@/models/Message';\n\nexport async function POST(req: Request) {\n  try {\n    const body = await req.json();\n    await dbConnect();\n    const savedMessage = await Message.create(body);\n    return NextResponse.json({ success: true, id: savedMessage._id });\n  } catch {\n    return NextResponse.json({ success: false }, { status: 500 });\n  }\n}\n\nexport async function GET() {\n  try {\n    await dbConnect();\n    const messages = await Message.find().sort({ createdAt: -1 });\n    return NextResponse.json({ messages });\n  } catch {\n    return NextResponse.json({ messages: [] }, { status: 500 });\n  }\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"-step-7-react-query-scoped-to-messages",children:["\u2705 Step 7: React Query Scoped to ",(0,a.jsx)(n.code,{children:"/messages"})]}),"\n",(0,a.jsx)(n.h3,{id:"srcappmessageslayouttsx",children:(0,a.jsx)(n.code,{children:"src/app/messages/layout.tsx"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"'use client';\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\nconst queryClient = new QueryClient();\n\nexport default function MessagesLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  );\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-step-8-set-up-data-table",children:"\u2705 Step 8: Set Up Data Table"}),"\n",(0,a.jsx)(n.h3,{id:"install-base-table-ui-from-shadcn",children:"Install base table UI from shadcn:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npx shadcn@latest add table\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h3,{id:"create-srccomponentsuidata-tabletsx",children:["Create ",(0,a.jsx)(n.code,{children:"src/components/ui/data-table.tsx"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"'use client';\n\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div className=\"rounded-md border\">\n      <Table>\n        <TableHeader>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => (\n                <TableHead key={header.id}>\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(header.column.columnDef.header, header.getContext())}\n                </TableHead>\n              ))}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody>\n          {table.getRowModel().rows.map((row) => (\n            <TableRow key={row.id}>\n              {row.getVisibleCells().map((cell) => (\n                <TableCell key={cell.id}>\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h3,{id:"create-srccomponentsuicolumnsts",children:["Create ",(0,a.jsx)(n.code,{children:"src/components/ui/columns.ts"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { ColumnDef } from '@tanstack/react-table';\n\nexport type Message = {\n  _id: string;\n  name: string;\n  email: string;\n  message: string;\n};\n\nexport const columns: ColumnDef<Message>[] = [\n  { accessorKey: 'name', header: 'Name' },\n  { accessorKey: 'email', header: 'Email' },\n  { accessorKey: 'message', header: 'Message' },\n];\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-step-9-use-the-table-in-page",children:"\u2705 Step 9: Use the Table in Page"}),"\n",(0,a.jsx)(n.h3,{id:"srcappmessagespagetsx",children:(0,a.jsx)(n.code,{children:"src/app/messages/page.tsx"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"'use client';\n\nimport { useQuery } from '@tanstack/react-query';\nimport { columns } from '@/components/ui/columns';\nimport { DataTable } from '@/components/ui/data-table';\n\nasync function fetchMessages() {\n  const res = await fetch('/api/contact');\n  return res.json();\n}\n\nexport default function MessagesPage() {\n  const { data, isLoading } = useQuery({\n    queryKey: ['messages'],\n    queryFn: fetchMessages,\n  });\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-semibold mb-4\">Messages</h1>\n      {!isLoading && data ? (\n        <DataTable columns={columns} data={data.messages} />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-step-10-initialize-sanity-studio-optional",children:"\u2705 Step 10: Initialize Sanity Studio (Optional)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install -g sanity\nsanity init\n"})}),"\n",(0,a.jsxs)(n.p,{children:['Choose the "Clean project" template and dataset: ',(0,a.jsx)(n.code,{children:"production"})]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Create ",(0,a.jsx)(n.code,{children:"sanity/schemaTypes/homepage.js"}),":"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import { defineField, defineType } from 'sanity';\n\nexport const homepage = defineType({\n  name: 'homepage',\n  title: 'Homepage',\n  type: 'document',\n  fields: [\n    defineField({ name: 'title', type: 'string' }),\n    defineField({ name: 'subtitle', type: 'string' }),\n    defineField({ name: 'ctaText', type: 'string' }),\n    defineField({ name: 'ctaLink', type: 'string' }),\n    defineField({ name: 'image', type: 'image' }),\n  ]\n});\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["Edit ",(0,a.jsx)(n.code,{children:"sanity/schemaTypes/index.js"}),":"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import { homepage } from './homepage';\nexport const schemaTypes = [homepage];\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"Run the studio:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sanity dev\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"8-connect-sanity-to-frontend-and-configure-cors",children:"8. Connect Sanity to Frontend and Configure CORS"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Create ",(0,a.jsx)(n.code,{children:"src/sanityClient.js"}),":"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import sanityClient from '@sanity/client';\n\nexport const client = sanityClient({\n  projectId: 'your_project_id_here',\n  dataset: 'production',\n  useCdn: true,\n  apiVersion: '2023-01-01'\n});\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Find your Project ID:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["In ",(0,a.jsx)(n.code,{children:"sanity.config.js"})]}),"\n",(0,a.jsxs)(n.li,{children:["Or at ",(0,a.jsx)(n.a,{href:"https://www.sanity.io/manage",children:"https://www.sanity.io/manage"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Configure CORS:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Visit ",(0,a.jsx)(n.a,{href:"https://www.sanity.io/manage",children:"https://www.sanity.io/manage"})]}),"\n",(0,a.jsx)(n.li,{children:"Go to API settings \u2192 CORS Origins"}),"\n",(0,a.jsxs)(n.li,{children:["Add: ",(0,a.jsx)(n.code,{children:"http://localhost:5173"})]}),"\n",(0,a.jsx)(n.li,{children:"Leave \u201cAllow credentials\u201d unchecked and Save"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"9-update-homepage-to-use-sanity",children:"9. Update Homepage to Use Sanity"}),"\n",(0,a.jsxs)(n.p,{children:["Replace ",(0,a.jsx)(n.code,{children:"Home.jsx"})," with:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'import React, { useEffect, useState } from \'react\';\nimport { client } from \'../sanityClient\';\nimport { Link } from \'react-router-dom\';\n\nexport default function Home() {\n  const [content, setContent] = useState({});\n\n  useEffect(() => {\n    client.fetch(`*[_type == "homepage"][0]`).then(setContent);\n  }, []);\n\n  return (\n    <div className="text-center p-10">\n      <h1 className="text-3xl font-bold">{content.title || "Loading..."}</h1>\n      <p className="mt-4">{content.subtitle}</p>\n      <Link to={content.ctaLink || "/contact"}>\n        <button className="mt-6 bg-blue-500 text-white px-4 py-2 rounded">\n          {content.ctaText || "Contact Us"}\n        </button>\n      </Link>\n    </div>\n  );\n}\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:"\u2705 You're now running a complete fullstack app!"})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>l});var s=t(6540);const a={},o=s.createContext(a);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);